/* only things to do with patch editor / visual programming layer */
/* authors georgi marinov, ivan mukho */

@vp-node-bg:         			#4D7DC2;
@vp-node-content-bg:			rgba(0,0,0,0.3);
@vp-node-color: 	 			@device-def-color;
@vp-node-text-size:				10.5pt;
@vp-node-border-radius: 		@border-radius-base;

@vp-node-slot-text-size:		@vp-node-text-size - 1.5pt;
@vp-node-slot-text-color-default: 	#ddd;
@vp-node-slot-text-color-connected: white;
@vp-node-slot-text-color-connecting: yellow;

@vp-node-button-padding:		2px 5px;
@vp-node-button-margin:			2px;
@vp-node-button-text-size:		@vp-node-text-size - 1.5pt;
@vp-node-button-color:			#fff;	//@btn-primary-color;
@vp-node-button-background: 	@btn-primary-bg;
@vp-node-button-border-color: 	@btn-primary-border;
@vp-node-button-border-radius: 	@border-radius-small;

button.vp.svg {	// for (square) buttons with svg icons inside
	background: none;
	position: relative;
	outline: none;
	padding: none !important;
  	opacity: 0.8;
  	&.p_fade {
	 	opacity: 0.4;
	}
  	&:hover, &.p_fade:hover {
	  opacity: 0.85;
	}
  	&:active, &.p_fade:active {
	  opacity: 1.0;
	  border: 0px;
	  outline: 0 !important;
	  box-shadow: none !important;
	  -moz-box-shadow: none !important;
	  outline-offset: 0 !important;
	}
  	svg {
	  width: 16px;
	  height: 16px;
	  fill: @device-def-color;
	  position: absolute;
	  display: block;
	  left: 50%;
	  top: 50%;
	  margin: -8px 0 0 -8px;
	}
}

// adjustments for specific buttons
button.vp.svg {
  svg.cmd_edit_graph {
	top: 55%;
  }
}
div.graph-node.p_renamed .p_header > div span.p_title {color: #ffc;}


div.graph-node {
  	box-shadow: 0 0 2px rgba(0,0,0,0.2);
  	display: table;
    border: 0;
	border-spacing: 0;
	border-radius: @vp-node-border-radius;
	background: @vp-node-bg;
	color: @vp-node-color;
	overflow: hidden;
  	.p_header {
	  position:relative;
	  border-top-left-radius: @vp-node-border-radius;
	  border-top-right-radius: @vp-node-border-radius;
	  >div {
		  display:table;
		  width:100%;
		  position:relative;
		  height: @device-header-height;
		  span.p_title {
			  font-weight: 600;
			  cursor: move;
			  width:100%;	// force buttons to their specified width
		  }
		  span, button {
			  display: table-cell;
			  height: @device-header-height;
			  min-width: @device-header-height;
			  vertical-align: middle;
		  }
		  button {	// node box button
			  height: @device-header-height;
			  width: @device-header-height ! important;
			  padding: 0;
			  margin: 0;
			  border: 0;
			  position:relative;
			  &.plugin-toggle svg {
				  width: 16px;
				  height: 16px;
				  fill: @device-def-color;
				  position: absolute;
				  display: block;
				  left: 50%;
				  top: 50%;
				  margin: -8px 0 0 -8px;
			  }
		  }
		  button {
			background: none;
		  }
		  button.plugin-toggle {
			  background-color: rgba(0,0,0,0.3);
		  }
		  span {
			  margin: 0px;
			  padding: 0 20px 0 10px;
			  line-height: @vp-node-text-size;
			  font-size: @vp-node-text-size;
			  color: @device-def-color;
			  height: @device-header-height;
		  }
	  }
	  .p_ins, .p_outs {	// in header
		display:table-cell;
	  }
	}
	.p_slot {			// in header
	  span.status {
			display:table-cell;
			padding:0;
			width:32px;
			min-width:32px;
			height: 28px;
			vertical-align: middle;
			position:relative;
			>svg {
			  width: 8px; height: 8px;
			  position:absolute;
			  top: 50%;
			  left: 50%;
			  margin: -4px 0 0 -4px;
			}
			>svg.p_on {visibility: hidden;}
		}
	  &.p_connected {
		color: @vp-node-slot-text-color-connected;
		span.status>svg.p_on {visibility: visible;}
		span.status>svg.p_off {visibility: hidden;}
	  }
	  &.p_connecting {
		color: @vp-node-slot-text-color-connecting;
		span.status>svg.p_on {visibility: visible;}
		span.status>svg.p_off {visibility: hidden;}
	  }
	}
  	.p_content {
	  	background: @vp-node-content-bg;
	  	display: table;
	  	width:100%;
	  	height:100%;	// required for ins and outs to achieve 100% height
	  	>.p_plugin, >.p_ins, >.p_outs {
		  position: relative;
		  display:table-cell;
		  height: 100%;
		}
	  	>.p_ins {
		  >.p_in {
		  }
		}
	  	>.p_outs {
		  text-align: right;
		  >.p_out {
		  }
		}
	  	>.p_plugin {
		  width:100%;
		  vertical-align: middle;
		  vertical-position: 5%;
		  button {	// node plugin content button
			background: @vp-node-button-background;
			border: none;
			border-radius: @vp-node-button-border-radius;
			font-size: @vp-node-button-text-size;
			font-weight: 600;
			color: @vp-node-button-color;
			padding: @vp-node-button-padding;
			margin: @vp-node-button-margin;
			&:hover {
			  text-shadow: 0px 0px 15px rgba(255,255,255,0.9);
			}
			&.state_on {
			  background: rgba(255,255,255,0.4);
			  color: #fff;
			}
			&.state_off {
			  background: rgba(0,0,0,0.4);
			  color: #ccc;
			}
			&.fxtrigger {
			  -webkit-transition: background 0.4s linear;
			  -moz-transition: background 0.4s linear;
			  transition: background 0.4s linear;
			}
			&.fxtrigger:active {
			  -webkit-transition: background 0s linear;
			  -moz-transition: background 0s linear;
			  transition: background 0s linear;
			  background: rgba(255,255,255,0.7);
			}
		  }
		  input, select, textarea {
			color: #fff;
			font-size: @vp-node-text-size;
			background: rgba(0,0,0,0.3);
			border: 1px solid rgba(255,255,255,0.3);
			border-radius: 2px;
			-webkit-appearance: none;
			margin: 1px ;
		  }
		  input:focus, select:focus, textarea:focus {
			outline:0;
		  }
		}
	  	.p_in, .p_out {
		  color: white;
		}
	  	.p_slot:last-of-type {		// for things with e.g. two slots on one side and many on the other
			height: 70%;
		}
		.p_slot:only-of-type {
		  height:100%;
		}
	  	.p_slot {
			position:relative;
		  	display:table;
		  	padding:0; margin:0;
		  	min-width: 80px;
		  	height: 20px;
		  	color: @vp-node-slot-text-color-default;
		  	span.status {
			  background: rgba(0,0,0,0.15);	// inside content area
			}
		  	label {
			  font-size: @vp-node-slot-text-size;
			  padding: 5px;
			  vertical-align: middle;
			  display:table-cell;
			  width:100%;
			}
		}

	  	.p_slot.p_compatible {
		  color: green;
		}
	  	.p_slot.p_incompatible {
		  color: red;
		}

	}
  	input.node-title-input {	// TODO: move Application.prototype.onNodeHeaderDblClicked event handler to UI
	  	color: #000 !important;
  		font-size: @vp-node-text-size;
	}
}

div.graph-node.p_inline {
  button.toggle {display:none;}
}

@io_hidden_width: 1px;


// .has.single selectors weigh over .has
// noodles need these to be displayed always, io or not
div.graph-node .p_ins  {width:@io_hidden_width; min-width:@io_hidden_width; }
div.graph-node .p_outs {width:@io_hidden_width; min-width:@io_hidden_width;}

div.graph-node.p_has_ins div.p_content>div.p_ins,
div.graph-node.p_has_outs div.p_content>div.p_outs {
  .p_slot {
  	width:auto; min-width: 5ex;	// min-width required to solve e.g. color to HSL outputs etc.
  }
}

// but make sure ins and outs are never too close to the UI or to each other
div.graph-node div.p_content>div.p_ins>.p_slot {margin-right: 5px;}
div.graph-node div.p_content>div.p_outs>.p_slot {margin-left: 5px;}

// exceptions for specific plugins
div.graph-node.p_id_envelope_modulator,
div.graph-node.p_pi
{
  &.p_has_ins div.p_content>div.p_ins, &.p_has_outs>div.p_content>div.p_outs {
	.p_slot {
	  min-width: 5ex;
	}
  }
}


// when a node has ins or outs in the header, hide their labels and set their width
div.graph-node.p_header_in.p_has_ins div.p_header .p_ins,
div.graph-node.p_header_out.p_has_outs div.p_header .p_outs {
  min-width: 30px; width:30px;
  label {
	display:none;
  }
}
// when a node displays header ins or outs, hide the empty slot columns in the content row
div.graph-node.has_ins.p_header_in.p_1in div.p_content .p_ins,
div.graph-node.has_outs.p_header_out.p_1out div.p_content .p_outs {
  width:@io_hidden_width; min-width:@io_hidden_width;
}


div.graph-node {
  box-shadow: 0 0 1px 1px rgba(0,0,0,0.3);
}
div.graph-node.p_inline {
  box-shadow: none;
}
div.graph-node.p_selected,
div.graph-node.p_inline.p_selected
{
  box-shadow: 0 0 1px 1px rgba(255,255,255,0.8);
}

div.graph-node.p_collapse div.p_content, div.graph-node.p_collapse div.p_plugin {
  display:none;
}

// edit button
.graph-node .btn-xs {
    color: @bg-darker;
}


.graph-node.p_collapse {
  	button.plugin-toggle svg {
		-webkit-transform: rotate(-90deg);
		-moz-transform: rotate(-90deg);
		transform: rotate(-90deg);
	}
}
.pl_delete
{
	background: #ff3b3b; /* Old browsers */
	background: -moz-linear-gradient(top,  #ff3b3b 1%, #df1b1b 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(1%,#ff3b3b), color-stop(100%,#df1b1b)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  #ff3b3b 1%,#df1b1b 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  #ff3b3b 1%,#df1b1b 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  #ff3b3b 1%,#df1b1b 100%); /* IE10+ */
	background: linear-gradient(to bottom,  #ff3b3b 1%,#df1b1b 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff3b3b', endColorstr='#df1b1b',GradientType=0 ); /* IE6-9 */
}



.ic {
	text-align: left;
	vertical-align: top;
}

.oc {
	text-align: right;
	vertical-align: top;
}

.pl_slot {
	cursor: pointer;
	padding: 2px;
}

.pl_slot.connected {}
.pl_slot.input {}
.pl_slot.output {}
.pl_slot.dynamic {}


.p_ui_col
{
	padding: 10px;
	border: none !important;
	vertical-align: top;
}


.p_content {
  ::-webkit-scrollbar {
	  width: 8px;
  }

  ::-webkit-scrollbar-button {
	  display: none!important;
  }

  ::-webkit-scrollbar-track {
	  background-color: rgba(0,0,0,0.2);
	  border-radius: 3px;
	  width: 6px;
  }

  ::-webkit-scrollbar-track-piece {
	  background-color: rgba(0,0,0,0.2);
  }

  ::-webkit-scrollbar-thumb {
	  background-color: rgba(255,255,255,0.2);
	  border-radius: 3px;
	  width: 4px;
	  border: none;
	  background-clip: content-box;
  }

  ::-webkit-scrollbar-corner {
	  display: none!important;
  }
}

div.graph-node.p_cat_meta {
  background: rgba(182, 164, 0, 0.95);
}


div.graph-node.p_id_annotation {
  color: #fff;
  div.p_content {
	padding: 0px;
	textarea {
	  font-size: 9pt;
	  font-weight: 600;
	  min-height: 90px;
	  min-width: 200px;
	  padding: 10px 25px;
	  margin: 3px -5px 3px 5px;
	  background: none;
	  border: none;
	}
  }
}


div.graph-node.p_cat_value {
  background: rgba(77, 125, 194, 0.95);
}

div.graph-node.p_cat_renderer {
  background: rgba(89, 89, 109, 0.95);
}

div.graph-node.p_cat_environment {
  background: #59596D;
  .p_content button {
	background: rgba(255,255,255,0.4);
	color: #fff;
  }
}

div.graph-node.p_cat_material,
div.graph-node.p_cat_texture {
  background: rgba(71, 101, 141, 0.95);
}

div.graph-node.p_cat_light {
  background: rgba(185, 184, 140, 0.95);
  color: #222;
}

div.graph-node.p_cat_compound {
  background: rgba(82, 5, 104, 0.95);
  .p_content button {
	background: rgba(255,255,255,0.4);
  }
}

div.graph-node.p_id_color_picker {
  .p_content {
	table {
	  width: 100%;
	  font-size: 110%;
	  border-collapse: separate;
	  border-spacing: 3px;
	  th, td {
		text-align: center;
		padding: 1px 3px;
		margin: 3px ! important;
		font-weight: 600;
		border:0;
		width: 17%;
	  }
	  th:first-child, td:first-child {
		width: 32%;
	  }
	  th {
		color: rgba(255,255,255,0.3);
	  }
	  td {
		background: rgba(0,0,0,0.3);
		border-radius: 2px;
		text-transform: uppercase;
	  }
	}

  }
}

div.graph-node.p_id_data_info_display {
  .p_content pre {
	max-height: 200px;
	width: 200px;
  }
}


div.graph-node .p_content .p_plugin button.vp.svg.p_round {
  width:44px;
  height:44px;
  background: rgba(30,30,30,0.9);
  border-radius: 22px;
  border:0;
  outline:0;
  opacity: 1;
  &:hover {
	opacity:1;
	background: rgba(30,30,30,0.9);
  }
  &:active {
	opacity: 1;
  }
}

div.graph-node.p_id_url_texture_generator {
  div.p_plugin {
	position:relative;
	background: #000;
	&.p_ui_col {padding:0;}
	div.p_thumbnail {
	  width:200px;
	  height:120px;
	  vertical-align: middle;
	  text-align: center;
	  opacity: 0.8;
	  z-index: 1;
	}
	button {
	  z-index: 2;
	  position:absolute;
	  left:50%;
	  top:50%;
	  margin-top: -22px;
	  margin-left: -22px;
	  svg {
		fill: #ccc;
	  }
	  &:hover svg {fill: #fff;}
	}
  }
}

div.graph-node.p_inline  {
  .p_header {
	background: none;
  }
  .p_content, .p_header .p_slot label {
	display: none;
  }
  .p_ins, .p_outs {
	div.p_slot {
	  margin: 7px 0;
	  height: 18px;
	  width: 18px;
	  span.status {
		width:16px;
		min-width:16px;
		height: 14px;
	  }
	}
  }
  &.p_has_ins .p_slot, &.p_has_ins svg {
	border-top-left-radius: 3px;
	border-bottom-left-radius: 3px;
  }
  &.p_has_outs .p_slot, &.p_has_outs svg {
	border-top-right-radius: 3px;
	border-bottom-right-radius: 3px;
  }
}

// inline ins or outs
div.graph-node.p_1in, div.graph-node.p_1out .p_header .p_slot span {width: 26px; min-width: 26px;}

div.graph-node.p_inline {
  background: none ! important;
}
div.graph-node.p_inline .p_header.p_inline {
  background: none;
  button,svg {
	display: inline-block;
  }
  svg.p_icon {
	width: 32px;
	height: 32px;
  }
  .p_ins {
	height: 18px;
	.p_slot {
	  height: 18px;
	}
  }
}



div.graph-node.p_cat_io .p_header
{
  .p_ins .p_slot, .p_outs .p_slot, span {
  	background: #C74C09;
  }
  svg {
	background: #EE5400;
  }
}


div.graph-node.p_cat_io.p_id_variable_local_read .p_header,
div.graph-node.p_cat_io.p_id_variable_local_write .p_header
{
  .p_ins .p_slot, .p_outs .p_slot, span {
  	background: #24A219;
  }
  svg {
	background: #17820B;
  }
}
